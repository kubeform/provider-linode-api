apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: linode.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: nodes.nodebalancer.linode.kubeform.com
spec:
  group: nodebalancer.linode.kubeform.com
  names:
    kind: Node
    listKind: NodeList
    plural: nodes
    singular: node
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  address:
                    description: The private IP Address and port (IP:PORT) where this
                      backend can be reached. This must be a private IP address.
                    type: string
                  configID:
                    description: The ID of the NodeBalancerConfig to access.
                    format: int64
                    type: integer
                  id:
                    type: string
                  label:
                    description: The label for this node. This is for display purposes
                      only.
                    type: string
                  mode:
                    description: The mode this NodeBalancer should use when sending
                      traffic to this backend. If set to `accept` this backend is
                      accepting traffic. If set to `reject` this backend will not
                      receive traffic. If set to `drain` this backend will not receive
                      new traffic, but connections already pinned to it will continue
                      to be routed to it. If set to `backup` this backend will only
                      accept traffic if all other nodes are down.
                    type: string
                  nodebalancerID:
                    description: The ID of the NodeBalancer to access.
                    format: int64
                    type: integer
                  status:
                    description: The current status of this node, based on the configured
                      checks of its NodeBalancer Config. (unknown, UP, DOWN)
                    type: string
                  weight:
                    description: Used when picking a backend to serve a request and
                      is not pinned to a single backend yet. Nodes with a higher weight
                      will receive more traffic. (1-255)
                    format: int64
                    type: integer
                required:
                - address
                - configID
                - label
                - nodebalancerID
                type: object
              state:
                properties:
                  address:
                    description: The private IP Address and port (IP:PORT) where this
                      backend can be reached. This must be a private IP address.
                    type: string
                  configID:
                    description: The ID of the NodeBalancerConfig to access.
                    format: int64
                    type: integer
                  id:
                    type: string
                  label:
                    description: The label for this node. This is for display purposes
                      only.
                    type: string
                  mode:
                    description: The mode this NodeBalancer should use when sending
                      traffic to this backend. If set to `accept` this backend is
                      accepting traffic. If set to `reject` this backend will not
                      receive traffic. If set to `drain` this backend will not receive
                      new traffic, but connections already pinned to it will continue
                      to be routed to it. If set to `backup` this backend will only
                      accept traffic if all other nodes are down.
                    type: string
                  nodebalancerID:
                    description: The ID of the NodeBalancer to access.
                    format: int64
                    type: integer
                  status:
                    description: The current status of this node, based on the configured
                      checks of its NodeBalancer Config. (unknown, UP, DOWN)
                    type: string
                  weight:
                    description: Used when picking a backend to serve a request and
                      is not pinned to a single backend yet. Nodes with a higher weight
                      will receive more traffic. (1-255)
                    format: int64
                    type: integer
                required:
                - address
                - configID
                - label
                - nodebalancerID
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
